name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            vishnuindira/exercise:latest
            vishnuindira/exercise:${{ github.sha }}
            
      - name: If previous step failed, log the error and transfer log to EC2
        if: ${{ failure() }}
        run: |
          echo "$(date) - Build Failure in repo: ${{ github.repository }}" >> logfile.log
          scp -i ~/.ssh/id_rsa logfile.log ec2-user@${{ secrets.EC2_IP_ADDRESS }}:/home/ec2-user/logs/

  deploy:
    runs-on: self-hosted
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup SSH Key and known_hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_IP_ADDRESS }} >> ~/.ssh/known_hosts

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Pull the image
        run: docker pull vishnuindira/exercise:latest

      - name: Stop and remove existing container if exists
        run: docker stop my-app || true && docker rm my-app || true

      - name: Start the container
        run: docker run -d --name my-app -p 3000:8080 vishnuindira/exercise:latest

      - name: If previous step failed, log the error and transfer log to EC2
        if: ${{ failure() }}
        run: |
          echo "$(date) - Deploy Failure in repo: ${{ github.repository }}" >> logfile.log
          scp -i ~/.ssh/id_rsa logfile.log ec2-user@${{ secrets.EC2_IP_ADDRESS }}:/home/ec2-user/logs/
